{"version":3,"file":"component---src-pages-projects-tsx-4197608189d48510f3f1.js","mappings":"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","sources":["webpack://lloreggia-ch/./src/pages/projects.tsx","webpack://lloreggia-ch/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/layout/dist/chunk-NEK3OOAM.mjs"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport { graphql, PageProps } from \"gatsby\";\r\nimport { SimpleGrid, Text } from \"@chakra-ui/react\";\r\n\r\nimport { Layout, LinkCard } from \"../components\";\r\n\r\nconst ProjectsPage: FC<PageProps<Queries.ProjectsPageQuery>> = ({ data }) => {\r\n  const projects = data.allMdx.nodes;\r\n\r\n  return (\r\n    <Layout title=\"Projects\">\r\n      <SimpleGrid columns={[1, 2, 3]} spacing={4}>\r\n        {projects.map((project) => {\r\n          return (\r\n            <LinkCard\r\n              key={project.id}\r\n              title={project.frontmatter?.title || project.fields?.slug}\r\n              to={project.fields?.slug || \"\"}\r\n              image={\r\n                project.frontmatter?.thumbnailImage?.childImageSharp?.gatsbyImageData ||\r\n                project.frontmatter?.featuredImage?.childImageSharp?.gatsbyImageData\r\n              }\r\n            >\r\n              <Text\r\n                dangerouslySetInnerHTML={{\r\n                  __html: project.frontmatter?.description || project.excerpt || \"\",\r\n                }}\r\n              />\r\n            </LinkCard>\r\n          );\r\n        })}\r\n      </SimpleGrid>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProjectsPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query ProjectsPage {\r\n    allMdx(sort: { frontmatter: { title: ASC } }, filter: { internal: { contentFilePath: { regex: \"//content/projects/.+/\" } } }) {\r\n      nodes {\r\n        id\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          description\r\n          featuredImage {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300)\r\n            }\r\n          }\r\n          thumbnailImage {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","'use client'\nimport {\n  Grid\n} from \"./chunk-JARCRF6W.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n//# sourceMappingURL=chunk-NEK3OOAM.mjs.map"],"names":["_ref","data","projects","allMdx","nodes","React","Layout","title","SimpleGrid","columns","spacing","map","project","_project$frontmatter","_project$fields","_project$fields2","_project$frontmatter2","_project$frontmatter3","_project$frontmatter4","_project$frontmatter5","_project$frontmatter6","_project$frontmatter7","_project$frontmatter8","LinkCard","key","id","frontmatter","fields","slug","to","image","thumbnailImage","childImageSharp","gatsbyImageData","featuredImage","Text","dangerouslySetInnerHTML","__html","description","excerpt","Grid","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","div","__css","displayName","Object","freeze","mapResponsive","prop","mapper","Array","isArray","item","keys","reduce","result","spacingX","spacingY","minChildWidth","theme","width","value","_value","n","widthToColumns"],"sourceRoot":""}