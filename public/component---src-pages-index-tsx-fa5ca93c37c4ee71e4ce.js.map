{"version":3,"file":"component---src-pages-index-tsx-fa5ca93c37c4ee71e4ce.js","mappings":"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","sources":["webpack://lloreggia-ch/./src/pages/index.tsx","webpack://lloreggia-ch/./node_modules/@chakra-ui/react/dist/esm/components/grid/grid.js","webpack://lloreggia-ch/./node_modules/@chakra-ui/react/dist/esm/components/grid/simple-grid.js"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport { graphql, PageProps } from \"gatsby\";\r\nimport { Heading, Separator, SimpleGrid, Text } from \"@chakra-ui/react\";\r\n\r\nimport { Layout } from \"../components/layout\";\r\nimport { Link, LinkCard } from \"../components/ui\";\r\n\r\nconst IndexPage: FC<PageProps<Queries.IndexPageQuery>> = ({ data }) => {\r\n  const blogPosts = data.blog.nodes;\r\n  const projects = data.projects.nodes;\r\n\r\n  return (\r\n    <Layout title=\"Home\">\r\n      <Heading as=\"h2\" mb={4}>\r\n        <Link to=\"/projects\">Projects</Link>\r\n      </Heading>\r\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} gap={4}>\r\n        {projects.map((project) => {\r\n          const title = project.frontmatter?.title || project.fields?.slug;\r\n\r\n          return (\r\n            <LinkCard\r\n              key={project.id}\r\n              title={title}\r\n              to={project.fields?.slug || \"\"}\r\n              image={\r\n                project.frontmatter?.thumbnailImage?.childImageSharp?.gatsbyImageData ||\r\n                project.frontmatter?.featuredImage?.childImageSharp?.gatsbyImageData\r\n              }\r\n            >\r\n              <Text\r\n                dangerouslySetInnerHTML={{\r\n                  __html: project.frontmatter?.description || project.excerpt || \"\",\r\n                }}\r\n                itemProp=\"description\"\r\n              />\r\n            </LinkCard>\r\n          );\r\n        })}\r\n      </SimpleGrid>\r\n\r\n      <Separator my={8} />\r\n\r\n      <Heading as=\"h2\" mb={4}>\r\n        <Link to=\"/blog\">Blog</Link>\r\n      </Heading>\r\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} gap={4}>\r\n        {blogPosts.map((post) => {\r\n          const title = post.frontmatter?.title || post.fields?.slug;\r\n\r\n          return (\r\n            <LinkCard\r\n              key={post.id}\r\n              title={title}\r\n              to={post.fields?.slug || \"\"}\r\n              footer={post.frontmatter?.date}\r\n              image={\r\n                post.frontmatter?.thumbnailImage?.childImageSharp?.gatsbyImageData ||\r\n                post.frontmatter?.featuredImage?.childImageSharp?.gatsbyImageData\r\n              }\r\n            >\r\n              <Text\r\n                dangerouslySetInnerHTML={{\r\n                  __html: post.frontmatter?.description || post.excerpt || \"\",\r\n                }}\r\n                itemProp=\"description\"\r\n              />\r\n            </LinkCard>\r\n          );\r\n        })}\r\n      </SimpleGrid>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexPage {\r\n    blog: allMdx(sort: { frontmatter: { date: DESC } }, limit: 4, filter: { internal: { contentFilePath: { regex: \"//content/blog/.+/\" } } }) {\r\n      nodes {\r\n        id\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          featuredImage {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300)\r\n            }\r\n          }\r\n          thumbnailImage {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    projects: allMdx(\r\n      sort: { frontmatter: { title: ASC } }\r\n      limit: 4\r\n      filter: { internal: { contentFilePath: { regex: \"//content/projects/.+/\" } } }\r\n    ) {\r\n      nodes {\r\n        id\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          description\r\n          featuredImage {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300)\r\n            }\r\n          }\r\n          thumbnailImage {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 300)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { chakra } from '../../styled-system/factory.js';\n\nconst Grid = forwardRef(\n  function Grid2(props, ref) {\n    const {\n      templateAreas,\n      column,\n      row,\n      autoFlow,\n      autoRows,\n      templateRows,\n      autoColumns,\n      templateColumns,\n      inline,\n      ...rest\n    } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...rest,\n        ref,\n        css: [\n          {\n            display: inline ? \"inline-grid\" : \"grid\",\n            gridTemplateAreas: templateAreas,\n            gridAutoColumns: autoColumns,\n            gridColumn: column,\n            gridRow: row,\n            gridAutoFlow: autoFlow,\n            gridAutoRows: autoRows,\n            gridTemplateRows: templateRows,\n            gridTemplateColumns: templateColumns\n          },\n          props.css\n        ]\n      }\n    );\n  }\n);\n\nexport { Grid };\n","\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { mapObject } from '../../utils/walk-object.js';\nimport { useChakraContext } from '../../styled-system/provider.js';\nimport { Grid } from './grid.js';\n\nconst SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, minChildWidth, ...rest } = props;\n    const sys = useChakraContext();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, sys) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(Grid, { ref, templateColumns, ...rest });\n  }\n);\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, sys) {\n  return mapObject(width, (value) => {\n    const _value = sys.tokens.getVar(`sizes.${value}`, toPx(value));\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapObject(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport { SimpleGrid };\n"],"names":["_ref","data","blogPosts","blog","nodes","projects","React","Layout","title","Heading","as","mb","Link","to","SimpleGrid","columns","base","md","lg","gap","map","project","_project$frontmatter","_project$fields","_project$fields2","_project$frontmatter2","_project$frontmatter3","_project$frontmatter4","_project$frontmatter5","_project$frontmatter6","_project$frontmatter7","_project$frontmatter8","frontmatter","fields","slug","LinkCard","key","id","image","thumbnailImage","childImageSharp","gatsbyImageData","featuredImage","Text","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","Separator","my","post","_post$frontmatter","_post$fields","_post$fields2","_post$frontmatter2","_post$frontmatter3","_post$frontmatter3$th","_post$frontmatter3$th2","_post$frontmatter4","_post$frontmatter4$fe","_post$frontmatter4$fe2","_post$frontmatter5","footer","date","Grid","forwardRef","props","ref","templateAreas","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","inline","rest","jsx","div","css","display","gridTemplateAreas","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","minChildWidth","sys","width","value","_value","tokens","getVar","n","widthToColumns","count"],"sourceRoot":""}