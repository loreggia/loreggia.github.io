{"version":3,"file":"component---src-pages-index-tsx-19308039eeb1d7e3be62.js","mappings":"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","sources":["webpack://lloreggia-ch/./node_modules/@chakra-ui/layout/dist/chunk-JARCRF6W.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/layout/dist/chunk-NEK3OOAM.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/layout/dist/chunk-NRJBSIIZ.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/card/dist/chunk-HAZMUPV3.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/card/dist/chunk-YQO7BFFX.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/card/dist/chunk-2EW3JUUD.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/card/dist/chunk-FHHZMTWR.mjs","webpack://lloreggia-ch/./node_modules/@chakra-ui/card/dist/chunk-BDSTZZXD.mjs","webpack://lloreggia-ch/./src/pages/index.tsx"],"sourcesContent":["'use client'\n\n// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n//# sourceMappingURL=chunk-JARCRF6W.mjs.map","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","'use client'\nimport {\n  Grid\n} from \"./chunk-JARCRF6W.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n//# sourceMappingURL=chunk-NEK3OOAM.mjs.map","'use client'\n\n// src/link-box.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar LinkOverlay = forwardRef(\n  function LinkOverlay2(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.a,\n      {\n        ...rest,\n        ref,\n        className: cx(\"chakra-linkbox__overlay\", className),\n        rel: isExternal ? \"noopener noreferrer\" : rel,\n        target: isExternal ? \"_blank\" : target,\n        __css: {\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }\n      }\n    );\n  }\n);\nvar LinkBox = forwardRef(function LinkBox2(props, ref) {\n  const { className, ...rest } = props;\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      position: \"relative\",\n      ...rest,\n      className: cx(\"chakra-linkbox\", className),\n      __css: {\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1\n        }\n      }\n    }\n  );\n});\n\nexport {\n  LinkOverlay,\n  LinkBox\n};\n//# sourceMappingURL=chunk-NRJBSIIZ.mjs.map","'use client'\n\n// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n//# sourceMappingURL=chunk-HAZMUPV3.mjs.map","'use client'\nimport {\n  CardStylesProvider\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n//# sourceMappingURL=chunk-YQO7BFFX.mjs.map","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-header.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardHeader\n};\n//# sourceMappingURL=chunk-2EW3JUUD.mjs.map","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n//# sourceMappingURL=chunk-FHHZMTWR.mjs.map","'use client'\nimport {\n  useCardStyles\n} from \"./chunk-HAZMUPV3.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n//# sourceMappingURL=chunk-BDSTZZXD.mjs.map","import React, { FC } from \"react\";\r\nimport { graphql, PageProps } from \"gatsby\";\r\nimport { Card, CardBody, CardFooter, CardHeader, Divider, Heading, LinkBox, LinkOverlay, List, ListItem, SimpleGrid, Text } from \"@chakra-ui/react\";\r\n\r\nimport { Bio, Layout, Link, Seo } from \"../components\";\r\n\r\nconst IndexPage: FC<PageProps<Queries.IndexPageQuery>> = ({ data }) => {\r\n  const blogPosts = data.blog.nodes;\r\n  const projects = data.projects.nodes;\r\n\r\n  return (\r\n    <Layout title=\"Home\">\r\n      <Seo title=\"Home\" />\r\n\r\n      <Heading as=\"h2\" mb={4}>\r\n        <Link to=\"/projects\">Projects</Link>\r\n      </Heading>\r\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={4}>\r\n        {projects.map((project) => {\r\n          const title = project.frontmatter?.title || project.fields?.slug;\r\n\r\n          return (\r\n            <LinkBox as={Card} key={project.fields?.slug}>\r\n              <CardHeader fontSize=\"large\" fontWeight=\"bold\">\r\n                <LinkOverlay as={Link} to={project.fields?.slug || \"\"}>\r\n                  {title}\r\n                </LinkOverlay>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Text\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: project.frontmatter?.description || project.excerpt || \"\",\r\n                  }}\r\n                  itemProp=\"description\"\r\n                />\r\n              </CardBody>\r\n            </LinkBox>\r\n          );\r\n        })}\r\n      </SimpleGrid>\r\n\r\n      <Divider my={8} />\r\n\r\n      <Heading as=\"h2\" mb={4}>\r\n        <Link to=\"/blog\">Blog</Link>\r\n      </Heading>\r\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={4}>\r\n        {blogPosts.map((post) => {\r\n          const title = post.frontmatter?.title || post.fields?.slug;\r\n\r\n          return (\r\n            <LinkBox as={Card} key={post.id}>\r\n              <CardHeader fontSize=\"large\" fontWeight=\"bold\">\r\n                <LinkOverlay as={Link} to={`${post.fields?.slug}`}>\r\n                  {title}\r\n                </LinkOverlay>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Text\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: post.frontmatter?.description || post.excerpt || \"\",\r\n                  }}\r\n                  itemProp=\"description\"\r\n                />\r\n              </CardBody>\r\n              <CardFooter fontSize=\"small\">{post.frontmatter?.date}</CardFooter>\r\n            </LinkBox>\r\n          );\r\n        })}\r\n      </SimpleGrid>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexPage {\r\n    blog: allMdx(sort: { frontmatter: { date: DESC } }, limit: 4, filter: { internal: { contentFilePath: { regex: \"//content/blog/.+/\" } } }) {\r\n      nodes {\r\n        id\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          slug\r\n        }\r\n      }\r\n    }\r\n    projects: allMdx(\r\n      sort: { frontmatter: { title: ASC } }\r\n      limit: 4\r\n      filter: { internal: { contentFilePath: { regex: \"//content/projects/.+/\" } } }\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Grid","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","div","__css","displayName","Object","freeze","mapResponsive","prop","mapper","Array","isArray","map","item","keys","reduce","result","key","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","theme","width","value","_value","n","widthToColumns","LinkOverlay","isExternal","target","rel","className","a","cx","position","content","cursor","top","left","zIndex","height","LinkBox","CardStylesProvider","useCardStyles","Card","children","direction","justify","align","flexDirection","justifyContent","alignItems","minWidth","wordWrap","container","CardHeader","header","CardBody","body","CardFooter","footer","_ref","data","blogPosts","blog","nodes","projects","React","Layout","title","Seo","Heading","as","mb","Link","to","base","md","lg","project","_project$frontmatter","_project$fields","_project$fields2","_project$fields3","_project$frontmatter2","frontmatter","fields","slug","fontSize","fontWeight","Text","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","Divider","my","post","_post$frontmatter","_post$fields","_post$fields2","_post$frontmatter2","_post$frontmatter3","id","date"],"sourceRoot":""}